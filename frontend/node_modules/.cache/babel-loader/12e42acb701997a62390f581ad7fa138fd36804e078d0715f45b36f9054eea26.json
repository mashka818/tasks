{"ast":null,"code":"import axios from 'axios';\nimport { getCurrentUser, saveUser, removeUser } from '../utils/tokenUtils';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\nclass AuthService {\n  async login(username, password) {\n    const response = await axios.post(`${API_URL}/auth/signin`, {\n      username,\n      password\n    });\n    if (response.data.accessToken) {\n      saveUser(response.data);\n    }\n    return response.data;\n  }\n  logout() {\n    removeUser();\n  }\n  async register(username, email, password, fullName, position, phone) {\n    return axios.post(`${API_URL}/auth/signup`, {\n      username,\n      email,\n      password,\n      fullName,\n      position,\n      phone\n    });\n  }\n  getCurrentUser() {\n    return getCurrentUser();\n  }\n  getAuthHeader() {\n    const user = this.getCurrentUser();\n    if (user && user.accessToken) {\n      // Ensure the token is properly formatted\n      return {\n        'x-access-token': user.accessToken\n      };\n    } else {\n      return {};\n    }\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","getCurrentUser","saveUser","removeUser","API_URL","process","env","REACT_APP_API_URL","AuthService","login","username","password","response","post","data","accessToken","logout","register","email","fullName","position","phone","getAuthHeader","user"],"sources":["C:/Users/Masha/Desktop/KP/frontend/src/services/auth.service.js"],"sourcesContent":["import axios from 'axios';\r\nimport { getCurrentUser, saveUser, removeUser } from '../utils/tokenUtils';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\r\n\r\nclass AuthService {\r\n  async login(username, password) {\r\n    const response = await axios.post(`${API_URL}/auth/signin`, { username, password });\r\n    if (response.data.accessToken) {\r\n      saveUser(response.data);\r\n    }\r\n    return response.data;\r\n  }\r\n\r\n  logout() {\r\n    removeUser();\r\n  }\r\n\r\n  async register(username, email, password, fullName, position, phone) {\r\n    return axios.post(`${API_URL}/auth/signup`, {\r\n      username,\r\n      email,\r\n      password,\r\n      fullName,\r\n      position,\r\n      phone\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return getCurrentUser();\r\n  }\r\n\r\n  getAuthHeader() {\r\n    const user = this.getCurrentUser();\r\n    if (user && user.accessToken) {\r\n      // Ensure the token is properly formatted\r\n      return { 'x-access-token': user.accessToken };\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nexport default new AuthService(); "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,qBAAqB;AAE1E,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,WAAW,CAAC;EAChB,MAAMC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IAC9B,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,GAAGT,OAAO,cAAc,EAAE;MAAEM,QAAQ;MAAEC;IAAS,CAAC,CAAC;IACnF,IAAIC,QAAQ,CAACE,IAAI,CAACC,WAAW,EAAE;MAC7Bb,QAAQ,CAACU,QAAQ,CAACE,IAAI,CAAC;IACzB;IACA,OAAOF,QAAQ,CAACE,IAAI;EACtB;EAEAE,MAAMA,CAAA,EAAG;IACPb,UAAU,CAAC,CAAC;EACd;EAEA,MAAMc,QAAQA,CAACP,QAAQ,EAAEQ,KAAK,EAAEP,QAAQ,EAAEQ,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,EAAE;IACnE,OAAOrB,KAAK,CAACa,IAAI,CAAC,GAAGT,OAAO,cAAc,EAAE;MAC1CM,QAAQ;MACRQ,KAAK;MACLP,QAAQ;MACRQ,QAAQ;MACRC,QAAQ;MACRC;IACF,CAAC,CAAC;EACJ;EAEApB,cAAcA,CAAA,EAAG;IACf,OAAOA,cAAc,CAAC,CAAC;EACzB;EAEAqB,aAAaA,CAAA,EAAG;IACd,MAAMC,IAAI,GAAG,IAAI,CAACtB,cAAc,CAAC,CAAC;IAClC,IAAIsB,IAAI,IAAIA,IAAI,CAACR,WAAW,EAAE;MAC5B;MACA,OAAO;QAAE,gBAAgB,EAAEQ,IAAI,CAACR;MAAY,CAAC;IAC/C,CAAC,MAAM;MACL,OAAO,CAAC,CAAC;IACX;EACF;AACF;AAEA,eAAe,IAAIP,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}