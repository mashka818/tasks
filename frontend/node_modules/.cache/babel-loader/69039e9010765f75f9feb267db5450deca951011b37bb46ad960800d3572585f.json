{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Masha\\\\Desktop\\\\KP\\\\frontend\\\\src\\\\pages\\\\AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button, Form, Modal, Card, Alert, Badge, InputGroup } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { UserService } from '../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminPanel() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [roleSelections, setRoleSelections] = useState({\n    admin: false,\n    manager: false,\n    user: false\n  });\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searching, setSearching] = useState(false);\n\n  // Fetch all users when component mounts\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      setLoading(true);\n      const response = await UserService.getAllUsers();\n      setUsers(response);\n      setError('');\n      setSearchQuery(''); // Сбросить поисковый запрос при обновлении списка\n    } catch (err) {\n      console.error('Error fetching users:', err);\n      setError('Ошибка при получении списка пользователей');\n      toast.error('Не удалось загрузить список пользователей');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!searchQuery.trim()) {\n      // Если поле поиска пустое, просто загружаем всех пользователей\n      fetchUsers();\n      return;\n    }\n    try {\n      setSearching(true);\n      const results = await UserService.searchUsers(searchQuery);\n      setUsers(results);\n      setSearching(false);\n    } catch (err) {\n      console.error('Error searching users:', err);\n      toast.error('Ошибка при поиске пользователей');\n      setSearching(false);\n    }\n  };\n  const clearSearch = () => {\n    setSearchQuery('');\n    fetchUsers();\n  };\n  const handleEditRoles = user => {\n    setSelectedUser(user);\n\n    // Reset role selections\n    const initialRoles = {\n      admin: false,\n      manager: false,\n      user: true // User role is default\n    };\n\n    // Set current roles\n    if (user.roles && Array.isArray(user.roles)) {\n      user.roles.forEach(role => {\n        // Make sure role is a string before using toLowerCase\n        const roleStr = typeof role === 'string' ? role : role && role.name ? role.name : String(role);\n        const roleName = roleStr.toLowerCase().replace('role_', '');\n        if (initialRoles.hasOwnProperty(roleName)) {\n          initialRoles[roleName] = true;\n        }\n      });\n    }\n    setRoleSelections(initialRoles);\n    setShowEditModal(true);\n  };\n  const handleRoleChange = role => {\n    const newSelections = {\n      ...roleSelections,\n      [role]: !roleSelections[role]\n    };\n\n    // Ensure at least one role is selected\n    const hasAnyRole = Object.values(newSelections).some(isSelected => isSelected);\n    if (!hasAnyRole) {\n      toast.warning('Пользователь должен иметь хотя бы одну роль');\n      // Keep the role that was about to be unselected\n      return;\n    }\n\n    // If trying to add admin role, also add user role by default\n    if (role === 'admin' && newSelections.admin && !newSelections.user) {\n      newSelections.user = true;\n    }\n\n    // If trying to add manager role, also add user role by default\n    if (role === 'manager' && newSelections.manager && !newSelections.user) {\n      newSelections.user = true;\n    }\n    setRoleSelections(newSelections);\n  };\n  const saveUserRoles = async () => {\n    try {\n      // Convert role selections to array of role names\n      const selectedRoles = Object.entries(roleSelections).filter(([_, isSelected]) => isSelected).map(([role, _]) => role);\n\n      // Ensure at least one role is selected\n      if (selectedRoles.length === 0) {\n        toast.error('Пользователь должен иметь хотя бы одну роль');\n        return;\n      }\n\n      // If user is removing admin role from themselves, show warning\n      const currentUser = JSON.parse(localStorage.getItem('user'));\n      if (currentUser && currentUser.id === selectedUser.id && selectedUser.roles.some(r => typeof r === 'string' && r.toLowerCase().includes('admin')) && !selectedRoles.includes('admin')) {\n        if (!window.confirm('Вы собираетесь удалить права администратора у своей учетной записи. Это действие может привести к потере доступа к панели администратора. Продолжить?')) {\n          return;\n        }\n      }\n      console.log('Sending role update with roles:', selectedRoles);\n      const result = await UserService.updateUserRoles(selectedUser.id, selectedRoles);\n      console.log('Role update response:', result);\n      toast.success('Роли пользователя обновлены');\n      setShowEditModal(false);\n\n      // Refresh the user list to ensure data consistency\n      fetchUsers();\n    } catch (err) {\n      console.error('Error updating user roles:', err);\n\n      // Show more detailed error information if available\n      let errorMessage = 'Ошибка при обновлении ролей пользователя';\n      if (err.response && err.response.data && err.response.data.message) {\n        errorMessage += `: ${err.response.data.message}`;\n      }\n      toast.error(errorMessage);\n    }\n  };\n  const getRoleBadges = userRoles => {\n    if (!userRoles || userRoles.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Badge, {\n        bg: \"secondary\",\n        children: \"\\u041D\\u0435\\u0442 \\u0440\\u043E\\u043B\\u0435\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 14\n      }, this);\n    }\n    return userRoles.map(role => {\n      // Make sure role is a string before using replace\n      const roleStr = typeof role === 'string' ? role : role && role.name ? role.name : String(role);\n      const roleName = roleStr.replace('ROLE_', '').toLowerCase();\n      let badgeColor = 'secondary';\n      switch (roleName) {\n        case 'admin':\n          badgeColor = 'danger';\n          break;\n        case 'manager':\n          badgeColor = 'primary';\n          break;\n        case 'user':\n          badgeColor = 'success';\n          break;\n        default:\n          badgeColor = 'info';\n      }\n      return /*#__PURE__*/_jsxDEV(Badge, {\n        bg: badgeColor,\n        className: \"me-1\",\n        children: roleName\n      }, roleStr, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"\\u041F\\u0430\\u043D\\u0435\\u043B\\u044C \\u0430\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0430\\u0442\\u043E\\u0440\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-0\",\n          children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\\u043C\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mb-3\",\n          onClick: fetchUsers,\n          children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), users.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"info\",\n          children: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0438 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          responsive: true,\n          striped: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0424\\u0418\\u041E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0420\\u043E\\u043B\\u0438\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.fullName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: getRoleBadges(user.roles)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-primary\",\n                  size: \"sm\",\n                  onClick: () => handleEditRoles(user),\n                  children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0440\\u043E\\u043B\\u0438\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this)]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showEditModal,\n      onHide: () => setShowEditModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0440\\u043E\\u043B\\u0435\\u0439 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F \", selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u0420\\u043E\\u043B\\u0438 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                id: \"role-admin\",\n                label: \"\\u0410\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0430\\u0442\\u043E\\u0440\",\n                checked: roleSelections.admin,\n                onChange: () => handleRoleChange('admin'),\n                className: \"mb-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                id: \"role-manager\",\n                label: \"\\u041C\\u0435\\u043D\\u0435\\u0434\\u0436\\u0435\\u0440\",\n                checked: roleSelections.manager,\n                onChange: () => handleRoleChange('manager'),\n                className: \"mb-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                id: \"role-user\",\n                label: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\",\n                checked: roleSelections.user,\n                onChange: () => handleRoleChange('user')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowEditModal(false),\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: saveUserRoles,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPanel, \"TpECeIxmSSOiH80WI6FVcphRF0M=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","Form","Modal","Card","Alert","Badge","InputGroup","toast","UserService","jsxDEV","_jsxDEV","AdminPanel","_s","users","setUsers","loading","setLoading","error","setError","showEditModal","setShowEditModal","selectedUser","setSelectedUser","roleSelections","setRoleSelections","admin","manager","user","searchQuery","setSearchQuery","searching","setSearching","fetchUsers","response","getAllUsers","err","console","handleSearch","e","preventDefault","trim","results","searchUsers","clearSearch","handleEditRoles","initialRoles","roles","Array","isArray","forEach","role","roleStr","name","String","roleName","toLowerCase","replace","hasOwnProperty","handleRoleChange","newSelections","hasAnyRole","Object","values","some","isSelected","warning","saveUserRoles","selectedRoles","entries","filter","_","map","length","currentUser","JSON","parse","localStorage","getItem","id","r","includes","window","confirm","log","result","updateUserRoles","success","errorMessage","data","message","getRoleBadges","userRoles","bg","children","fileName","_jsxFileName","lineNumber","columnNumber","badgeColor","className","Header","Body","variant","onClick","responsive","striped","hover","username","fullName","email","size","show","onHide","closeButton","Title","Group","Label","Check","type","label","checked","onChange","Footer","_c","$RefreshReg$"],"sources":["C:/Users/Masha/Desktop/KP/frontend/src/pages/AdminPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Form, Modal, Card, Alert, Badge, InputGroup } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { UserService } from '../services';\r\n\r\nfunction AdminPanel() {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [roleSelections, setRoleSelections] = useState({\r\n    admin: false,\r\n    manager: false,\r\n    user: false\r\n  });\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searching, setSearching] = useState(false);\r\n\r\n  // Fetch all users when component mounts\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await UserService.getAllUsers();\r\n      setUsers(response);\r\n      setError('');\r\n      setSearchQuery(''); // Сбросить поисковый запрос при обновлении списка\r\n    } catch (err) {\r\n      console.error('Error fetching users:', err);\r\n      setError('Ошибка при получении списка пользователей');\r\n      toast.error('Не удалось загрузить список пользователей');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!searchQuery.trim()) {\r\n      // Если поле поиска пустое, просто загружаем всех пользователей\r\n      fetchUsers();\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setSearching(true);\r\n      const results = await UserService.searchUsers(searchQuery);\r\n      setUsers(results);\r\n      setSearching(false);\r\n    } catch (err) {\r\n      console.error('Error searching users:', err);\r\n      toast.error('Ошибка при поиске пользователей');\r\n      setSearching(false);\r\n    }\r\n  };\r\n\r\n  const clearSearch = () => {\r\n    setSearchQuery('');\r\n    fetchUsers();\r\n  };\r\n\r\n  const handleEditRoles = (user) => {\r\n    setSelectedUser(user);\r\n    \r\n    // Reset role selections\r\n    const initialRoles = {\r\n      admin: false,\r\n      manager: false,\r\n      user: true // User role is default\r\n    };\r\n    \r\n    // Set current roles\r\n    if (user.roles && Array.isArray(user.roles)) {\r\n      user.roles.forEach(role => {\r\n        // Make sure role is a string before using toLowerCase\r\n        const roleStr = typeof role === 'string' ? role : \r\n                       (role && role.name ? role.name : String(role));\r\n        const roleName = roleStr.toLowerCase().replace('role_', '');\r\n        if (initialRoles.hasOwnProperty(roleName)) {\r\n          initialRoles[roleName] = true;\r\n        }\r\n      });\r\n    }\r\n    \r\n    setRoleSelections(initialRoles);\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const handleRoleChange = (role) => {\r\n    const newSelections = {\r\n      ...roleSelections,\r\n      [role]: !roleSelections[role]\r\n    };\r\n    \r\n    // Ensure at least one role is selected\r\n    const hasAnyRole = Object.values(newSelections).some(isSelected => isSelected);\r\n    \r\n    if (!hasAnyRole) {\r\n      toast.warning('Пользователь должен иметь хотя бы одну роль');\r\n      // Keep the role that was about to be unselected\r\n      return;\r\n    }\r\n    \r\n    // If trying to add admin role, also add user role by default\r\n    if (role === 'admin' && newSelections.admin && !newSelections.user) {\r\n      newSelections.user = true;\r\n    }\r\n    \r\n    // If trying to add manager role, also add user role by default\r\n    if (role === 'manager' && newSelections.manager && !newSelections.user) {\r\n      newSelections.user = true;\r\n    }\r\n    \r\n    setRoleSelections(newSelections);\r\n  };\r\n\r\n  const saveUserRoles = async () => {\r\n    try {\r\n      // Convert role selections to array of role names\r\n      const selectedRoles = Object.entries(roleSelections)\r\n        .filter(([_, isSelected]) => isSelected)\r\n        .map(([role, _]) => role);\r\n\r\n      // Ensure at least one role is selected\r\n      if (selectedRoles.length === 0) {\r\n        toast.error('Пользователь должен иметь хотя бы одну роль');\r\n        return;\r\n      }\r\n      \r\n      // If user is removing admin role from themselves, show warning\r\n      const currentUser = JSON.parse(localStorage.getItem('user'));\r\n      if (currentUser && \r\n          currentUser.id === selectedUser.id && \r\n          selectedUser.roles.some(r => typeof r === 'string' && r.toLowerCase().includes('admin')) &&\r\n          !selectedRoles.includes('admin')) {\r\n        if (!window.confirm('Вы собираетесь удалить права администратора у своей учетной записи. Это действие может привести к потере доступа к панели администратора. Продолжить?')) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      console.log('Sending role update with roles:', selectedRoles);\r\n      \r\n      const result = await UserService.updateUserRoles(selectedUser.id, selectedRoles);\r\n      console.log('Role update response:', result);\r\n      \r\n      toast.success('Роли пользователя обновлены');\r\n      setShowEditModal(false);\r\n      \r\n      // Refresh the user list to ensure data consistency\r\n      fetchUsers();\r\n    } catch (err) {\r\n      console.error('Error updating user roles:', err);\r\n      \r\n      // Show more detailed error information if available\r\n      let errorMessage = 'Ошибка при обновлении ролей пользователя';\r\n      if (err.response && err.response.data && err.response.data.message) {\r\n        errorMessage += `: ${err.response.data.message}`;\r\n      }\r\n      \r\n      toast.error(errorMessage);\r\n    }\r\n  };\r\n\r\n  const getRoleBadges = (userRoles) => {\r\n    if (!userRoles || userRoles.length === 0) {\r\n      return <Badge bg=\"secondary\">Нет ролей</Badge>;\r\n    }\r\n    \r\n    return userRoles.map(role => {\r\n      // Make sure role is a string before using replace\r\n      const roleStr = typeof role === 'string' ? role : \r\n                     (role && role.name ? role.name : String(role));\r\n      const roleName = roleStr.replace('ROLE_', '').toLowerCase();\r\n      let badgeColor = 'secondary';\r\n      \r\n      switch (roleName) {\r\n        case 'admin':\r\n          badgeColor = 'danger';\r\n          break;\r\n        case 'manager':\r\n          badgeColor = 'primary';\r\n          break;\r\n        case 'user':\r\n          badgeColor = 'success';\r\n          break;\r\n        default:\r\n          badgeColor = 'info';\r\n      }\r\n      \r\n      return (\r\n        <Badge bg={badgeColor} className=\"me-1\" key={roleStr}>\r\n          {roleName}\r\n        </Badge>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center mt-5\">\r\n        <div className=\"spinner-border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <h1 className=\"mb-4\">Панель администратора</h1>\r\n      \r\n      <Card className=\"mb-4\">\r\n        <Card.Header>\r\n          <h5 className=\"mb-0\">Управление пользователями</h5>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {error && (\r\n            <Alert variant=\"danger\">\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          \r\n          <Button \r\n            variant=\"primary\" \r\n            className=\"mb-3\"\r\n            onClick={fetchUsers}\r\n          >\r\n            Обновить список\r\n          </Button>\r\n          \r\n          {users.length === 0 ? (\r\n            <Alert variant=\"info\">\r\n              Пользователи не найдены\r\n            </Alert>\r\n          ) : (\r\n            <Table responsive striped hover>\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>Имя пользователя</th>\r\n                  <th>ФИО</th>\r\n                  <th>Email</th>\r\n                  <th>Роли</th>\r\n                  <th>Действия</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users.map(user => (\r\n                  <tr key={user.id}>\r\n                    <td>{user.id}</td>\r\n                    <td>{user.username}</td>\r\n                    <td>{user.fullName}</td>\r\n                    <td>{user.email}</td>\r\n                    <td>{getRoleBadges(user.roles)}</td>\r\n                    <td>\r\n                      <Button\r\n                        variant=\"outline-primary\"\r\n                        size=\"sm\"\r\n                        onClick={() => handleEditRoles(user)}\r\n                      >\r\n                        Изменить роли\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n      \r\n      {/* Modal for editing user roles */}\r\n      <Modal show={showEditModal} onHide={() => setShowEditModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Изменение ролей пользователя {selectedUser?.username}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Роли пользователя</Form.Label>\r\n              <div>\r\n                <Form.Check \r\n                  type=\"checkbox\"\r\n                  id=\"role-admin\"\r\n                  label=\"Администратор\"\r\n                  checked={roleSelections.admin}\r\n                  onChange={() => handleRoleChange('admin')}\r\n                  className=\"mb-2\"\r\n                />\r\n                <Form.Check \r\n                  type=\"checkbox\"\r\n                  id=\"role-manager\"\r\n                  label=\"Менеджер\"\r\n                  checked={roleSelections.manager}\r\n                  onChange={() => handleRoleChange('manager')}\r\n                  className=\"mb-2\"\r\n                />\r\n                <Form.Check \r\n                  type=\"checkbox\"\r\n                  id=\"role-user\"\r\n                  label=\"Пользователь\"\r\n                  checked={roleSelections.user}\r\n                  onChange={() => handleRoleChange('user')}\r\n                />\r\n              </div>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowEditModal(false)}>\r\n            Отмена\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={saveUserRoles}>\r\n            Сохранить\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPanel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}