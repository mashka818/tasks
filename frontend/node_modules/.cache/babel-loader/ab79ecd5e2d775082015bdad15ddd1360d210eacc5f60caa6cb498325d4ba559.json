{"ast":null,"code":"import api from './api';\nclass TaskService {\n  async getAllTasks() {\n    const response = await api.get('/tasks');\n    return response.data;\n  }\n  async getTaskById(id) {\n    const response = await api.get(`/tasks/${id}`);\n    return response.data;\n  }\n  async getTasksByProject(projectId) {\n    const response = await api.get(`/projects/${projectId}/tasks`);\n    return response.data;\n  }\n  async createTask(taskData) {\n    console.log('Creating new task with data:', taskData);\n    try {\n      const response = await api.post('/tasks', taskData);\n      console.log('Task created successfully:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating task:', error.message);\n      if (error.response) {\n        console.error('Response status:', error.response.status);\n        console.error('Response data:', error.response.data);\n      }\n      throw error;\n    }\n  }\n  async updateTask(id, taskData) {\n    const response = await api.put(`/tasks/${id}`, taskData);\n    return response.data;\n  }\n  async deleteTask(id) {\n    const response = await api.delete(`/tasks/${id}`);\n    return response.data;\n  }\n  async updateActualHours(taskId, actualHours) {\n    const response = await api.put(`/tasks/${taskId}/actual-hours`, {\n      actualHours\n    });\n    return response.data;\n  }\n  async addComment(taskId, comment) {\n    const response = await api.post(`/tasks/${taskId}/comments`, {\n      comment\n    });\n    return response.data;\n  }\n  async addAttachment(taskId, file) {\n    // Используем FormData для отправки файла\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await api.post(`/tasks/${taskId}/attachments`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  }\n}\nexport default new TaskService();","map":{"version":3,"names":["api","TaskService","getAllTasks","response","get","data","getTaskById","id","getTasksByProject","projectId","createTask","taskData","console","log","post","error","message","status","updateTask","put","deleteTask","delete","updateActualHours","taskId","actualHours","addComment","comment","addAttachment","file","formData","FormData","append","headers"],"sources":["C:/Users/Masha/Desktop/KP/frontend/src/services/task.service.js"],"sourcesContent":["import api from './api';\r\n\r\nclass TaskService {\r\n  async getAllTasks() {\r\n    const response = await api.get('/tasks');\r\n    return response.data;\r\n  }\r\n\r\n  async getTaskById(id) {\r\n    const response = await api.get(`/tasks/${id}`);\r\n    return response.data;\r\n  }\r\n\r\n  async getTasksByProject(projectId) {\r\n    const response = await api.get(`/projects/${projectId}/tasks`);\r\n    return response.data;\r\n  }\r\n\r\n  async createTask(taskData) {\r\n    console.log('Creating new task with data:', taskData);\r\n    try {\r\n      const response = await api.post('/tasks', taskData);\r\n      console.log('Task created successfully:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating task:', error.message);\r\n      if (error.response) {\r\n        console.error('Response status:', error.response.status);\r\n        console.error('Response data:', error.response.data);\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateTask(id, taskData) {\r\n    const response = await api.put(`/tasks/${id}`, taskData);\r\n    return response.data;\r\n  }\r\n\r\n  async deleteTask(id) {\r\n    const response = await api.delete(`/tasks/${id}`);\r\n    return response.data;\r\n  }\r\n\r\n  async updateActualHours(taskId, actualHours) {\r\n    const response = await api.put(`/tasks/${taskId}/actual-hours`, { actualHours });\r\n    return response.data;\r\n  }\r\n\r\n  async addComment(taskId, comment) {\r\n    const response = await api.post(`/tasks/${taskId}/comments`, { comment });\r\n    return response.data;\r\n  }\r\n\r\n  async addAttachment(taskId, file) {\r\n    // Используем FormData для отправки файла\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    \r\n    const response = await api.post(`/tasks/${taskId}/attachments`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n    return response.data;\r\n  }\r\n}\r\n\r\nexport default new TaskService(); "],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,WAAW,CAAC;EAChB,MAAMC,WAAWA,CAAA,EAAG;IAClB,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,QAAQ,CAAC;IACxC,OAAOD,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMC,WAAWA,CAACC,EAAE,EAAE;IACpB,MAAMJ,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,UAAUG,EAAE,EAAE,CAAC;IAC9C,OAAOJ,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMG,iBAAiBA,CAACC,SAAS,EAAE;IACjC,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,aAAaK,SAAS,QAAQ,CAAC;IAC9D,OAAON,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMK,UAAUA,CAACC,QAAQ,EAAE;IACzBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,QAAQ,CAAC;IACrD,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMH,GAAG,CAACc,IAAI,CAAC,QAAQ,EAAEH,QAAQ,CAAC;MACnDC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEV,QAAQ,CAACE,IAAI,CAAC;MACxD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACC,OAAO,CAAC;MACpD,IAAID,KAAK,CAACZ,QAAQ,EAAE;QAClBS,OAAO,CAACG,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAACZ,QAAQ,CAACc,MAAM,CAAC;QACxDL,OAAO,CAACG,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACZ,QAAQ,CAACE,IAAI,CAAC;MACtD;MACA,MAAMU,KAAK;IACb;EACF;EAEA,MAAMG,UAAUA,CAACX,EAAE,EAAEI,QAAQ,EAAE;IAC7B,MAAMR,QAAQ,GAAG,MAAMH,GAAG,CAACmB,GAAG,CAAC,UAAUZ,EAAE,EAAE,EAAEI,QAAQ,CAAC;IACxD,OAAOR,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMe,UAAUA,CAACb,EAAE,EAAE;IACnB,MAAMJ,QAAQ,GAAG,MAAMH,GAAG,CAACqB,MAAM,CAAC,UAAUd,EAAE,EAAE,CAAC;IACjD,OAAOJ,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMiB,iBAAiBA,CAACC,MAAM,EAAEC,WAAW,EAAE;IAC3C,MAAMrB,QAAQ,GAAG,MAAMH,GAAG,CAACmB,GAAG,CAAC,UAAUI,MAAM,eAAe,EAAE;MAAEC;IAAY,CAAC,CAAC;IAChF,OAAOrB,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMoB,UAAUA,CAACF,MAAM,EAAEG,OAAO,EAAE;IAChC,MAAMvB,QAAQ,GAAG,MAAMH,GAAG,CAACc,IAAI,CAAC,UAAUS,MAAM,WAAW,EAAE;MAAEG;IAAQ,CAAC,CAAC;IACzE,OAAOvB,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMsB,aAAaA,CAACJ,MAAM,EAAEK,IAAI,EAAE;IAChC;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAE7B,MAAMzB,QAAQ,GAAG,MAAMH,GAAG,CAACc,IAAI,CAAC,UAAUS,MAAM,cAAc,EAAEM,QAAQ,EAAE;MACxEG,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAO7B,QAAQ,CAACE,IAAI;EACtB;AACF;AAEA,eAAe,IAAIJ,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}