{"ast":null,"code":"import axios from 'axios';\nimport { getCurrentUser, saveUser, removeUser } from '../utils/tokenUtils';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\nclass AuthService {\n  async login(username, password) {\n    console.log('Attempting login for user:', username);\n    const response = await axios.post(`${API_URL}/auth/signin`, {\n      username,\n      password\n    });\n    console.log('Login response received:', response.status);\n    if (response.data.accessToken) {\n      console.log('Access token received, saving user data');\n      console.log('Token:', response.data.accessToken.substring(0, 20) + '...');\n      saveUser(response.data);\n    } else {\n      console.log('No access token in response');\n    }\n    return response.data;\n  }\n  logout() {\n    console.log('Logging out, removing user data');\n    removeUser();\n  }\n  async register(username, email, password, fullName, position, phone) {\n    return axios.post(`${API_URL}/auth/signup`, {\n      username,\n      email,\n      password,\n      fullName,\n      position,\n      phone\n    });\n  }\n  getCurrentUser() {\n    const user = getCurrentUser();\n    console.log('Getting current user:', user ? `${user.username} (ID: ${user.id})` : 'No user found');\n    if (user) {\n      console.log('User has token:', !!user.accessToken);\n    }\n    return user;\n  }\n  getAuthHeader() {\n    const user = this.getCurrentUser();\n    if (user && user.accessToken) {\n      // Ensure the token is properly formatted\n      return {\n        'x-access-token': user.accessToken\n      };\n    } else {\n      return {};\n    }\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","getCurrentUser","saveUser","removeUser","API_URL","process","env","REACT_APP_API_URL","AuthService","login","username","password","console","log","response","post","status","data","accessToken","substring","logout","register","email","fullName","position","phone","user","id","getAuthHeader"],"sources":["C:/Users/Masha/Desktop/KP/frontend/src/services/auth.service.js"],"sourcesContent":["import axios from 'axios';\nimport { getCurrentUser, saveUser, removeUser } from '../utils/tokenUtils';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\nclass AuthService {\n  async login(username, password) {\n    console.log('Attempting login for user:', username);\n    const response = await axios.post(`${API_URL}/auth/signin`, { username, password });\n    console.log('Login response received:', response.status);\n    \n    if (response.data.accessToken) {\n      console.log('Access token received, saving user data');\n      console.log('Token:', response.data.accessToken.substring(0, 20) + '...');\n      saveUser(response.data);\n    } else {\n      console.log('No access token in response');\n    }\n    return response.data;\n  }\n\n  logout() {\n    console.log('Logging out, removing user data');\n    removeUser();\n  }\n\n  async register(username, email, password, fullName, position, phone) {\n    return axios.post(`${API_URL}/auth/signup`, {\n      username,\n      email,\n      password,\n      fullName,\n      position,\n      phone\n    });\n  }\n\n  getCurrentUser() {\n    const user = getCurrentUser();\n    console.log('Getting current user:', user ? `${user.username} (ID: ${user.id})` : 'No user found');\n    if (user) {\n      console.log('User has token:', !!user.accessToken);\n    }\n    return user;\n  }\n\n  getAuthHeader() {\n    const user = this.getCurrentUser();\n    if (user && user.accessToken) {\n      // Ensure the token is properly formatted\n      return { 'x-access-token': user.accessToken };\n    } else {\n      return {};\n    }\n  }\n}\n\nexport default new AuthService(); "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,qBAAqB;AAE1E,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,WAAW,CAAC;EAChB,MAAMC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IAC9BC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEH,QAAQ,CAAC;IACnD,MAAMI,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,GAAGX,OAAO,cAAc,EAAE;MAAEM,QAAQ;MAAEC;IAAS,CAAC,CAAC;IACnFC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEC,QAAQ,CAACE,MAAM,CAAC;IAExD,IAAIF,QAAQ,CAACG,IAAI,CAACC,WAAW,EAAE;MAC7BN,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;MACtDD,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC;MACzEjB,QAAQ,CAACY,QAAQ,CAACG,IAAI,CAAC;IACzB,CAAC,MAAM;MACLL,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C;IACA,OAAOC,QAAQ,CAACG,IAAI;EACtB;EAEAG,MAAMA,CAAA,EAAG;IACPR,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAC9CV,UAAU,CAAC,CAAC;EACd;EAEA,MAAMkB,QAAQA,CAACX,QAAQ,EAAEY,KAAK,EAAEX,QAAQ,EAAEY,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,EAAE;IACnE,OAAOzB,KAAK,CAACe,IAAI,CAAC,GAAGX,OAAO,cAAc,EAAE;MAC1CM,QAAQ;MACRY,KAAK;MACLX,QAAQ;MACRY,QAAQ;MACRC,QAAQ;MACRC;IACF,CAAC,CAAC;EACJ;EAEAxB,cAAcA,CAAA,EAAG;IACf,MAAMyB,IAAI,GAAGzB,cAAc,CAAC,CAAC;IAC7BW,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEa,IAAI,GAAG,GAAGA,IAAI,CAAChB,QAAQ,SAASgB,IAAI,CAACC,EAAE,GAAG,GAAG,eAAe,CAAC;IAClG,IAAID,IAAI,EAAE;MACRd,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,CAAC,CAACa,IAAI,CAACR,WAAW,CAAC;IACpD;IACA,OAAOQ,IAAI;EACb;EAEAE,aAAaA,CAAA,EAAG;IACd,MAAMF,IAAI,GAAG,IAAI,CAACzB,cAAc,CAAC,CAAC;IAClC,IAAIyB,IAAI,IAAIA,IAAI,CAACR,WAAW,EAAE;MAC5B;MACA,OAAO;QAAE,gBAAgB,EAAEQ,IAAI,CAACR;MAAY,CAAC;IAC/C,CAAC,MAAM;MACL,OAAO,CAAC,CAAC;IACX;EACF;AACF;AAEA,eAAe,IAAIV,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}